// chess.js@1.4.0 downloaded from https://ga.jspm.io/npm:chess.js@1.4.0/dist/esm/chess.js

function t(t){return t!==null?{comment:t,variations:[]}:{variations:[]}}function e(t,e,s,r,i){const n={move:t,variations:i};e&&(n.suffix=e);s&&(n.nag=s);r!==null&&(n.comment=r);return n}function s(...t){const[e,...s]=t;let r=e;for(const t of s)if(t!==null){r.variations=[t,...t.variations];t.variations=[];r=t}return e}function r(t,e){if(e.marker&&e.marker.comment){let t=e.root;while(true){const s=t.variations[0];if(!s){t.comment=e.marker.comment;break}t=s}}return{headers:t,root:e.root,result:(e.marker&&e.marker.result)??void 0}}function i(t,e){function s(){this.constructor=t}s.prototype=e.prototype;t.prototype=new s}function n(t,e,s,r){var i=Error.call(this,t);Object.setPrototypeOf&&Object.setPrototypeOf(i,n.prototype);i.expected=e;i.found=s;i.location=r;i.name="SyntaxError";return i}i(n,Error);function o(t,e,s){s=s||" ";if(t.length>e)return t;e-=t.length;s+=s.repeat(e);return t+s.slice(0,e)}n.prototype.format=function(t){var e="Error: "+this.message;if(this.location){var s=null;var r;for(r=0;r<t.length;r++)if(t[r].source===this.location.source){s=t[r].text.split(/\r\n|\n|\r/g);break}var i=this.location.start;var n=this.location.source&&typeof this.location.source.offset==="function"?this.location.source.offset(i):i;var a=this.location.source+":"+n.line+":"+n.column;if(s){var h=this.location.end;var l=o("",n.line.toString().length," ");var c=s[i.line-1];var u=i.line===h.line?h.column:c.length+1;var f=u-i.column||1;e+="\n --\x3e "+a+"\n"+l+" |\n"+n.line+" | "+c+"\n"+l+" | "+o("",i.column-1," ")+o("",f,"^")}else e+="\n at "+a}return e};n.buildMessage=function(t,e){var s={literal:function(t){return'"'+i(t.text)+'"'},class:function(t){var e=t.parts.map((function(t){return Array.isArray(t)?n(t[0])+"-"+n(t[1]):n(t)}));return"["+(t.inverted?"^":"")+e.join("")+"]"},any:function(){return"any character"},end:function(){return"end of input"},other:function(t){return t.description}};function r(t){return t.charCodeAt(0).toString(16).toUpperCase()}function i(t){return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+r(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+r(t)}))}function n(t){return t.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+r(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+r(t)}))}function o(t){return s[t.type](t)}function a(t){var e=t.map(o);var s,r;e.sort();if(e.length>0){for(s=1,r=1;s<e.length;s++)if(e[s-1]!==e[s]){e[r]=e[s];r++}e.length=r}switch(e.length){case 1:return e[0];case 2:return e[0]+" or "+e[1];default:return e.slice(0,-1).join(", ")+", or "+e[e.length-1]}}function h(t){return t?'"'+i(t)+'"':"end of input"}return"Expected "+a(t)+" but "+h(e)+" found."};function a(i,o){o=o!==void 0?o:{};var a={};var h=o.grammarSource;var l={pgn:Zt};var c=Zt;var u="[";var f='"';var _="]";var p=".";var g="O-O-O";var d="O-O";var v="0-0-0";var m="0-0";var b="$";var E="{";var C="}";var k=";";var S="(";var y=")";var A="1-0";var w="0-1";var P="1/2-1/2";var N="*";var T=/^[a-zA-Z]/;var I=/^[^"]/;var O=/^[0-9]/;var M=/^[.]/;var L=/^[a-zA-Z1-8\-=]/;var q=/^[+#]/;var x=/^[!?]/;var K=/^[^}]/;var R=/^[^\r\n]/;var F=/^[ \t\r\n]/;var D=Ht("tag pair");var U=Qt("[",false);var $=Qt('"',false);var Q=Qt("]",false);var B=Ht("tag name");var j=Bt([["a","z"],["A","Z"]],false,false);var H=Ht("tag value");var V=Bt(['"'],true,false);var W=Ht("move number");var G=Bt([["0","9"]],false,false);var z=Qt(".",false);var Z=Bt(["."],false,false);var J=Ht("standard algebraic notation");var X=Qt("O-O-O",false);var Y=Qt("O-O",false);var tt=Qt("0-0-0",false);var et=Qt("0-0",false);var st=Bt([["a","z"],["A","Z"],["1","8"],"-","="],false,false);var rt=Bt(["+","#"],false,false);var it=Ht("suffix annotation");var nt=Bt(["!","?"],false,false);var ot=Ht("NAG");var at=Qt("$",false);var ht=Ht("brace comment");var lt=Qt("{",false);var ct=Bt(["}"],true,false);var ut=Qt("}",false);var ft=Ht("rest of line comment");var _t=Qt(";",false);var pt=Bt(["\r","\n"],true,false);var gt=Ht("variation");var dt=Qt("(",false);var vt=Qt(")",false);var mt=Ht("game termination marker");var bt=Qt("1-0",false);var Et=Qt("0-1",false);var Ct=Qt("1/2-1/2",false);var kt=Qt("*",false);var St=Ht("whitespace");var yt=Bt([" ","\t","\r","\n"],false,false);var At=function(t,e){return r(t,e)};var wt=function(t){return Object.fromEntries(t)};var Pt=function(t,e){return[t,e]};var Nt=function(t,e){return{root:t,marker:e}};var Tt=function(e,r){return s(t(e),...r.flat())};var It=function(t,s,r,i,n){return e(t,s,r,i,n)};var Ot=function(t){return t};var Mt=function(t){return t.replace(/[\r\n]+/g," ")};var Lt=function(t){return t.trim()};var qt=function(t){return t};var xt=function(t,e){return{result:t,comment:e}};var Kt=o.peg$currPos|0;var Rt=[{line:1,column:1}];var Ft=Kt;var Dt=o.peg$maxFailExpected||[];var Ut=o.peg$silentFails|0;var $t;if(o.startRule){if(!(o.startRule in l))throw new Error("Can't start parsing from rule \""+o.startRule+'".');c=l[o.startRule]}function Qt(t,e){return{type:"literal",text:t,ignoreCase:e}}function Bt(t,e,s){return{type:"class",parts:t,inverted:e,ignoreCase:s}}function jt(){return{type:"end"}}function Ht(t){return{type:"other",description:t}}function Vt(t){var e=Rt[t];var s;if(e)return e;if(t>=Rt.length)s=Rt.length-1;else{s=t;while(!Rt[--s]);}e=Rt[s];e={line:e.line,column:e.column};while(s<t){if(i.charCodeAt(s)===10){e.line++;e.column=1}else e.column++;s++}Rt[t]=e;return e}function Wt(t,e,s){var r=Vt(t);var i=Vt(e);var n={source:h,start:{offset:t,line:r.line,column:r.column},end:{offset:e,line:i.line,column:i.column}};return n}function Gt(t){if(!(Kt<Ft)){if(Kt>Ft){Ft=Kt;Dt=[]}Dt.push(t)}}function zt(t,e,s){return new n(n.buildMessage(t,e),t,e,s)}function Zt(){var t,e,s;t=Kt;e=Jt();s=ee();t=At(e,s);return t}function Jt(){var t,e,s;t=Kt;e=[];s=Xt();while(s!==a){e.push(s);s=Xt()}s=_e();t=wt(e);return t}function Xt(){var t,e,s,r,n,o,h;Ut++;t=Kt;_e();if(i.charCodeAt(Kt)===91){e=u;Kt++}else{e=a;Ut===0&&Gt(U)}if(e!==a){_e();s=Yt();if(s!==a){_e();if(i.charCodeAt(Kt)===34){r=f;Kt++}else{r=a;Ut===0&&Gt($)}if(r!==a){n=te();if(i.charCodeAt(Kt)===34){o=f;Kt++}else{o=a;Ut===0&&Gt($)}if(o!==a){_e();if(i.charCodeAt(Kt)===93){h=_;Kt++}else{h=a;Ut===0&&Gt(Q)}if(h!==a)t=Pt(s,n);else{Kt=t;t=a}}else{Kt=t;t=a}}else{Kt=t;t=a}}else{Kt=t;t=a}}else{Kt=t;t=a}Ut--;t===a&&Ut===0&&Gt(D);return t}function Yt(){var t,e,s;Ut++;t=Kt;e=[];s=i.charAt(Kt);if(T.test(s))Kt++;else{s=a;Ut===0&&Gt(j)}if(s!==a)while(s!==a){e.push(s);s=i.charAt(Kt);if(T.test(s))Kt++;else{s=a;Ut===0&&Gt(j)}}else e=a;t=e!==a?i.substring(t,Kt):e;Ut--;if(t===a){e=a;Ut===0&&Gt(B)}return t}function te(){var t,e,s;Ut++;t=Kt;e=[];s=i.charAt(Kt);if(I.test(s))Kt++;else{s=a;Ut===0&&Gt(V)}while(s!==a){e.push(s);s=i.charAt(Kt);if(I.test(s))Kt++;else{s=a;Ut===0&&Gt(V)}}t=i.substring(t,Kt);Ut--;e=a;Ut===0&&Gt(H);return t}function ee(){var t,e,s;t=Kt;e=se();_e();s=fe();s===a&&(s=null);_e();t=Nt(e,s);return t}function se(){var t,e,s,r;t=Kt;e=he();e===a&&(e=null);s=[];r=re();while(r!==a){s.push(r);r=re()}t=Tt(e,s);return t}function re(){var t,e,s,r,i,n,o,h;t=Kt;_e();ie();_e();e=ne();if(e!==a){s=oe();s===a&&(s=null);r=[];i=ae();while(i!==a){r.push(i);i=ae()}i=_e();n=he();n===a&&(n=null);o=[];h=ue();while(h!==a){o.push(h);h=ue()}t=It(e,s,r,n,o)}else{Kt=t;t=a}return t}function ie(){var t,e,s,r,n,o;Ut++;t=Kt;e=[];s=i.charAt(Kt);if(O.test(s))Kt++;else{s=a;Ut===0&&Gt(G)}while(s!==a){e.push(s);s=i.charAt(Kt);if(O.test(s))Kt++;else{s=a;Ut===0&&Gt(G)}}if(i.charCodeAt(Kt)===46){s=p;Kt++}else{s=a;Ut===0&&Gt(z)}if(s!==a){r=_e();n=[];o=i.charAt(Kt);if(M.test(o))Kt++;else{o=a;Ut===0&&Gt(Z)}while(o!==a){n.push(o);o=i.charAt(Kt);if(M.test(o))Kt++;else{o=a;Ut===0&&Gt(Z)}}e=[e,s,r,n];t=e}else{Kt=t;t=a}Ut--;if(t===a){e=a;Ut===0&&Gt(W)}return t}function ne(){var t,e,s,r,n,o;Ut++;t=Kt;e=Kt;if(i.substr(Kt,5)===g){s=g;Kt+=5}else{s=a;Ut===0&&Gt(X)}if(s===a){if(i.substr(Kt,3)===d){s=d;Kt+=3}else{s=a;Ut===0&&Gt(Y)}if(s===a){if(i.substr(Kt,5)===v){s=v;Kt+=5}else{s=a;Ut===0&&Gt(tt)}if(s===a){if(i.substr(Kt,3)===m){s=m;Kt+=3}else{s=a;Ut===0&&Gt(et)}if(s===a){s=Kt;r=i.charAt(Kt);if(T.test(r))Kt++;else{r=a;Ut===0&&Gt(j)}if(r!==a){n=[];o=i.charAt(Kt);if(L.test(o))Kt++;else{o=a;Ut===0&&Gt(st)}if(o!==a)while(o!==a){n.push(o);o=i.charAt(Kt);if(L.test(o))Kt++;else{o=a;Ut===0&&Gt(st)}}else n=a;if(n!==a){r=[r,n];s=r}else{Kt=s;s=a}}else{Kt=s;s=a}}}}}if(s!==a){r=i.charAt(Kt);if(q.test(r))Kt++;else{r=a;Ut===0&&Gt(rt)}r===a&&(r=null);s=[s,r];e=s}else{Kt=e;e=a}t=e!==a?i.substring(t,Kt):e;Ut--;if(t===a){e=a;Ut===0&&Gt(J)}return t}function oe(){var t,e,s;Ut++;t=Kt;e=[];s=i.charAt(Kt);if(x.test(s))Kt++;else{s=a;Ut===0&&Gt(nt)}while(s!==a){e.push(s);if(e.length>=2)s=a;else{s=i.charAt(Kt);if(x.test(s))Kt++;else{s=a;Ut===0&&Gt(nt)}}}if(e.length<1){Kt=t;t=a}else t=e;Ut--;if(t===a){e=a;Ut===0&&Gt(it)}return t}function ae(){var t,e,s,r,n;Ut++;t=Kt;_e();if(i.charCodeAt(Kt)===36){e=b;Kt++}else{e=a;Ut===0&&Gt(at)}if(e!==a){s=Kt;r=[];n=i.charAt(Kt);if(O.test(n))Kt++;else{n=a;Ut===0&&Gt(G)}if(n!==a)while(n!==a){r.push(n);n=i.charAt(Kt);if(O.test(n))Kt++;else{n=a;Ut===0&&Gt(G)}}else r=a;s=r!==a?i.substring(s,Kt):r;if(s!==a)t=Ot(s);else{Kt=t;t=a}}else{Kt=t;t=a}Ut--;t===a&&Ut===0&&Gt(ot);return t}function he(){var t;t=le();t===a&&(t=ce());return t}function le(){var t,e,s,r,n;Ut++;t=Kt;if(i.charCodeAt(Kt)===123){e=E;Kt++}else{e=a;Ut===0&&Gt(lt)}if(e!==a){s=Kt;r=[];n=i.charAt(Kt);if(K.test(n))Kt++;else{n=a;Ut===0&&Gt(ct)}while(n!==a){r.push(n);n=i.charAt(Kt);if(K.test(n))Kt++;else{n=a;Ut===0&&Gt(ct)}}s=i.substring(s,Kt);if(i.charCodeAt(Kt)===125){r=C;Kt++}else{r=a;Ut===0&&Gt(ut)}if(r!==a)t=Mt(s);else{Kt=t;t=a}}else{Kt=t;t=a}Ut--;if(t===a){e=a;Ut===0&&Gt(ht)}return t}function ce(){var t,e,s,r,n;Ut++;t=Kt;if(i.charCodeAt(Kt)===59){e=k;Kt++}else{e=a;Ut===0&&Gt(_t)}if(e!==a){s=Kt;r=[];n=i.charAt(Kt);if(R.test(n))Kt++;else{n=a;Ut===0&&Gt(pt)}while(n!==a){r.push(n);n=i.charAt(Kt);if(R.test(n))Kt++;else{n=a;Ut===0&&Gt(pt)}}s=i.substring(s,Kt);t=Lt(s)}else{Kt=t;t=a}Ut--;if(t===a){e=a;Ut===0&&Gt(ft)}return t}function ue(){var t,e,s,r;Ut++;t=Kt;_e();if(i.charCodeAt(Kt)===40){e=S;Kt++}else{e=a;Ut===0&&Gt(dt)}if(e!==a){s=se();if(s!==a){_e();if(i.charCodeAt(Kt)===41){r=y;Kt++}else{r=a;Ut===0&&Gt(vt)}if(r!==a)t=qt(s);else{Kt=t;t=a}}else{Kt=t;t=a}}else{Kt=t;t=a}Ut--;t===a&&Ut===0&&Gt(gt);return t}function fe(){var t,e,s;Ut++;t=Kt;if(i.substr(Kt,3)===A){e=A;Kt+=3}else{e=a;Ut===0&&Gt(bt)}if(e===a){if(i.substr(Kt,3)===w){e=w;Kt+=3}else{e=a;Ut===0&&Gt(Et)}if(e===a){if(i.substr(Kt,7)===P){e=P;Kt+=7}else{e=a;Ut===0&&Gt(Ct)}if(e===a)if(i.charCodeAt(Kt)===42){e=N;Kt++}else{e=a;Ut===0&&Gt(kt)}}}if(e!==a){_e();s=he();s===a&&(s=null);t=xt(e,s)}else{Kt=t;t=a}Ut--;if(t===a){e=a;Ut===0&&Gt(mt)}return t}function _e(){var t,e;Ut++;t=[];e=i.charAt(Kt);if(F.test(e))Kt++;else{e=a;Ut===0&&Gt(yt)}while(e!==a){t.push(e);e=i.charAt(Kt);if(F.test(e))Kt++;else{e=a;Ut===0&&Gt(yt)}}Ut--;e=a;Ut===0&&Gt(St);return t}$t=c();if(o.peg$library)/** @type {any} */
return{peg$result:$t,peg$currPos:Kt,peg$FAILED:a,peg$maxFailExpected:Dt,peg$maxFailPos:Ft};if($t!==a&&Kt===i.length)return $t;$t!==a&&Kt<i.length&&Gt(jt());throw zt(Dt,Ft<i.length?i.charAt(Ft):null,Ft<i.length?Wt(Ft,Ft+1):Wt(Ft,Ft))}
/**
 * @license
 * Copyright (c) 2025, Jeff Hlywa (jhlywa@gmail.com)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */const h=0xffffffffffffffffn;function l(t,e){return(t<<e|t>>64n-e)&0xffffffffffffffffn}function c(t,e){return t*e&h}function u(t){return function(){let e=BigInt(t&h);let s=BigInt(t>>64n&h);const r=c(l(c(e,5n),7n),9n);s^=e;e=(l(e,24n)^s^s<<16n)&h;s=l(s,37n);t=s<<64n|e;return r}}const f=u(0xa187eb39cdcaed8f31c4b365b102e01en);const _=Array.from({length:2},(()=>Array.from({length:6},(()=>Array.from({length:128},(()=>f()))))));const p=Array.from({length:8},(()=>f()));const g=Array.from({length:16},(()=>f()));const d=f();const v="w";const m="b";const b="p";const E="n";const C="b";const k="r";const S="q";const y="k";const A="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";class Move{color;from;to;piece;captured;promotion;
/**
     * @deprecated This field is deprecated and will be removed in version 2.0.0.
     * Please use move descriptor functions instead: `isCapture`, `isPromotion`,
     * `isEnPassant`, `isKingsideCastle`, `isQueensideCastle`, `isCastle`, and
     * `isBigPawn`
     */
flags;san;lan;before;after;constructor(t,e){const{color:s,piece:r,from:i,to:n,flags:o,captured:a,promotion:h}=e;const l=X(i);const c=X(n);this.color=s;this.piece=r;this.from=l;this.to=c;this.san=t._moveToSan(e,t._moves({legal:true}));this.lan=l+c;this.before=t.fen();t._makeMove(e);this.after=t.fen();t._undoMove();this.flags="";for(const t in T)T[t]&o&&(this.flags+=P[t]);a&&(this.captured=a);if(h){this.promotion=h;this.lan+=h}}isCapture(){return this.flags.indexOf(P.CAPTURE)>-1}isPromotion(){return this.flags.indexOf(P.PROMOTION)>-1}isEnPassant(){return this.flags.indexOf(P.EP_CAPTURE)>-1}isKingsideCastle(){return this.flags.indexOf(P.KSIDE_CASTLE)>-1}isQueensideCastle(){return this.flags.indexOf(P.QSIDE_CASTLE)>-1}isBigPawn(){return this.flags.indexOf(P.BIG_PAWN)>-1}}const w=-1;const P={NORMAL:"n",CAPTURE:"c",BIG_PAWN:"b",EP_CAPTURE:"e",PROMOTION:"p",KSIDE_CASTLE:"k",QSIDE_CASTLE:"q",NULL_MOVE:"-"};const N=["a8","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","h1"];const T={NORMAL:1,CAPTURE:2,BIG_PAWN:4,EP_CAPTURE:8,PROMOTION:16,KSIDE_CASTLE:32,QSIDE_CASTLE:64,NULL_MOVE:128};
/* eslint-disable @typescript-eslint/naming-convention */const I={Event:"?",Site:"?",Date:"????.??.??",Round:"?",White:"?",Black:"?",Result:"*"};const O={WhiteTitle:null,BlackTitle:null,WhiteElo:null,BlackElo:null,WhiteUSCF:null,BlackUSCF:null,WhiteNA:null,BlackNA:null,WhiteType:null,BlackType:null,EventDate:null,EventSponsor:null,Section:null,Stage:null,Board:null,Opening:null,Variation:null,SubVariation:null,ECO:null,NIC:null,Time:null,UTCTime:null,UTCDate:null,TimeControl:null,SetUp:null,FEN:null,Termination:null,Annotator:null,Mode:null,PlyCount:null};const M={...I,...O};
/* eslint-enable @typescript-eslint/naming-convention */const L={a8:0,b8:1,c8:2,d8:3,e8:4,f8:5,g8:6,h8:7,a7:16,b7:17,c7:18,d7:19,e7:20,f7:21,g7:22,h7:23,a6:32,b6:33,c6:34,d6:35,e6:36,f6:37,g6:38,h6:39,a5:48,b5:49,c5:50,d5:51,e5:52,f5:53,g5:54,h5:55,a4:64,b4:65,c4:66,d4:67,e4:68,f4:69,g4:70,h4:71,a3:80,b3:81,c3:82,d3:83,e3:84,f3:85,g3:86,h3:87,a2:96,b2:97,c2:98,d2:99,e2:100,f2:101,g2:102,h2:103,a1:112,b1:113,c1:114,d1:115,e1:116,f1:117,g1:118,h1:119};const q={b:[16,32,17,15],w:[-16,-32,-17,-15]};const x={n:[-18,-33,-31,-14,18,33,31,14],b:[-17,-15,17,15],r:[-16,1,16,-1],q:[-17,-16,-15,1,17,16,15,-1],k:[-17,-16,-15,1,17,16,15,-1]};const K=[20,0,0,0,0,0,0,24,0,0,0,0,0,0,20,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,24,24,24,24,24,24,56,0,56,24,24,24,24,24,24,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,20,0,0,0,0,0,0,24,0,0,0,0,0,0,20];const R=[17,0,0,0,0,0,0,16,0,0,0,0,0,0,15,0,0,17,0,0,0,0,0,16,0,0,0,0,0,15,0,0,0,0,17,0,0,0,0,16,0,0,0,0,15,0,0,0,0,0,0,17,0,0,0,16,0,0,0,15,0,0,0,0,0,0,0,0,17,0,0,16,0,0,15,0,0,0,0,0,0,0,0,0,0,17,0,16,0,15,0,0,0,0,0,0,0,0,0,0,0,0,17,16,15,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-15,-16,-17,0,0,0,0,0,0,0,0,0,0,0,0,-15,0,-16,0,-17,0,0,0,0,0,0,0,0,0,0,-15,0,0,-16,0,0,-17,0,0,0,0,0,0,0,0,-15,0,0,0,-16,0,0,0,-17,0,0,0,0,0,0,-15,0,0,0,0,-16,0,0,0,0,-17,0,0,0,0,-15,0,0,0,0,0,-16,0,0,0,0,0,-17,0,0,-15,0,0,0,0,0,0,-16,0,0,0,0,0,0,-17];const F={p:1,n:2,b:4,r:8,q:16,k:32};const D="pnbrqkPNBRQK";const U=[E,C,k,S];const $=7;const Q=6;const B=1;const j=0;const H={[y]:T.KSIDE_CASTLE,[S]:T.QSIDE_CASTLE};const V={w:[{square:L.a1,flag:T.QSIDE_CASTLE},{square:L.h1,flag:T.KSIDE_CASTLE}],b:[{square:L.a8,flag:T.QSIDE_CASTLE},{square:L.h8,flag:T.KSIDE_CASTLE}]};const W={b:B,w:Q};const G="--";function z(t){return t>>4}function Z(t){return t&15}function J(t){return"0123456789".indexOf(t)!==-1}function X(t){const e=Z(t);const s=z(t);return"abcdefgh".substring(e,e+1)+"87654321".substring(s,s+1)}function Y(t){return t===v?m:v}function tt(t){const e=t.split(/\s+/);if(e.length!==6)return{ok:false,error:"Invalid FEN: must contain six space-delimited fields"};const s=parseInt(e[5],10);if(isNaN(s)||s<=0)return{ok:false,error:"Invalid FEN: move number must be a positive integer"};const r=parseInt(e[4],10);if(isNaN(r)||r<0)return{ok:false,error:"Invalid FEN: half move counter number must be a non-negative integer"};if(!/^(-|[abcdefgh][36])$/.test(e[3]))return{ok:false,error:"Invalid FEN: en-passant square is invalid"};if(/[^kKqQ-]/.test(e[2]))return{ok:false,error:"Invalid FEN: castling availability is invalid"};if(!/^(w|b)$/.test(e[1]))return{ok:false,error:"Invalid FEN: side-to-move is invalid"};const i=e[0].split("/");if(i.length!==8)return{ok:false,error:"Invalid FEN: piece data does not contain 8 '/'-delimited rows"};for(let t=0;t<i.length;t++){let e=0;let s=false;for(let r=0;r<i[t].length;r++)if(J(i[t][r])){if(s)return{ok:false,error:"Invalid FEN: piece data is invalid (consecutive number)"};e+=parseInt(i[t][r],10);s=true}else{if(!/^[prnbqkPRNBQK]$/.test(i[t][r]))return{ok:false,error:"Invalid FEN: piece data is invalid (invalid piece)"};e+=1;s=false}if(e!==8)return{ok:false,error:"Invalid FEN: piece data is invalid (too many squares in rank)"}}if(e[3][1]=="3"&&e[1]=="w"||e[3][1]=="6"&&e[1]=="b")return{ok:false,error:"Invalid FEN: illegal en-passant square"};const n=[{color:"white",regex:/K/g},{color:"black",regex:/k/g}];for(const{color:t,regex:s}of n){if(!s.test(e[0]))return{ok:false,error:`Invalid FEN: missing ${t} king`};if((e[0].match(s)||[]).length>1)return{ok:false,error:`Invalid FEN: too many ${t} kings`}}return Array.from(i[0]+i[7]).some((t=>t.toUpperCase()==="P"))?{ok:false,error:"Invalid FEN: some pawns are on the edge rows"}:{ok:true}}function et(t,e){const s=t.from;const r=t.to;const i=t.piece;let n=0;let o=0;let a=0;for(let t=0,h=e.length;t<h;t++){const h=e[t].from;const l=e[t].to;const c=e[t].piece;if(i===c&&s!==h&&r===l){n++;z(s)===z(h)&&o++;Z(s)===Z(h)&&a++}}return n>0?o>0&&a>0?X(s):a>0?X(s).charAt(1):X(s).charAt(0):""}function st(t,e,s,r,i,n=void 0,o=T.NORMAL){const a=z(r);if(i!==b||a!==$&&a!==j)t.push({color:e,from:s,to:r,piece:i,captured:n,flags:o});else for(let a=0;a<U.length;a++){const h=U[a];t.push({color:e,from:s,to:r,piece:i,captured:n,promotion:h,flags:o|T.PROMOTION})}}function rt(t){let e=t.charAt(0);if(e>="a"&&e<="h"){const e=t.match(/[a-h]\d.*[a-h]\d/);if(e)return;return b}e=e.toLowerCase();return e==="o"?y:e}function it(t){return t.replace(/=/,"").replace(/[+#]?[?!]*$/,"")}class Chess{_board=new Array(128);_turn=v;_header={};_kings={w:w,b:w};_epSquare=-1;_halfMoves=0;_moveNumber=0;_history=[];_comments={};_castling={w:0,b:0};_hash=0n;_positionCount=new Map;constructor(t=A,{skipValidation:e=false}={}){this.load(t,{skipValidation:e})}clear({preserveHeaders:t=false}={}){this._board=new Array(128);this._kings={w:w,b:w};this._turn=v;this._castling={w:0,b:0};this._epSquare=w;this._halfMoves=0;this._moveNumber=1;this._history=[];this._comments={};this._header=t?this._header:{...M};this._hash=this._computeHash();this._positionCount=new Map;this._header.SetUp=null;this._header.FEN=null}load(t,{skipValidation:e=false,preserveHeaders:s=false}={}){let r=t.split(/\s+/);if(r.length>=2&&r.length<6){const e=["-","-","0","1"];t=r.concat(e.slice(-(6-r.length))).join(" ")}r=t.split(/\s+/);if(!e){const{ok:e,error:s}=tt(t);if(!e)throw new Error(s)}const i=r[0];let n=0;this.clear({preserveHeaders:s});for(let t=0;t<i.length;t++){const e=i.charAt(t);if(e==="/")n+=8;else if(J(e))n+=parseInt(e,10);else{const t=e<"a"?v:m;this._put({type:e.toLowerCase(),color:t},X(n));n++}}this._turn=r[1];r[2].indexOf("K")>-1&&(this._castling.w|=T.KSIDE_CASTLE);r[2].indexOf("Q")>-1&&(this._castling.w|=T.QSIDE_CASTLE);r[2].indexOf("k")>-1&&(this._castling.b|=T.KSIDE_CASTLE);r[2].indexOf("q")>-1&&(this._castling.b|=T.QSIDE_CASTLE);this._epSquare=r[3]==="-"?w:L[r[3]];this._halfMoves=parseInt(r[4],10);this._moveNumber=parseInt(r[5],10);this._hash=this._computeHash();this._updateSetup(t);this._incPositionCount()}fen({forceEnpassantSquare:t=false}={}){let e=0;let s="";for(let t=L.a8;t<=L.h1;t++){if(this._board[t]){if(e>0){s+=e;e=0}const{color:r,type:i}=this._board[t];s+=r===v?i.toUpperCase():i.toLowerCase()}else e++;if(t+1&136){e>0&&(s+=e);t!==L.h1&&(s+="/");e=0;t+=8}}let r="";this._castling[v]&T.KSIDE_CASTLE&&(r+="K");this._castling[v]&T.QSIDE_CASTLE&&(r+="Q");this._castling[m]&T.KSIDE_CASTLE&&(r+="k");this._castling[m]&T.QSIDE_CASTLE&&(r+="q");r=r||"-";let i="-";if(this._epSquare!==w)if(t)i=X(this._epSquare);else{const t=this._epSquare+(this._turn===v?16:-16);const e=[t+1,t-1];for(const t of e){if(t&136)continue;const e=this._turn;if(this._board[t]?.color===e&&this._board[t]?.type===b){this._makeMove({color:e,from:t,to:this._epSquare,piece:b,captured:b,flags:T.EP_CAPTURE});const s=!this._isKingAttacked(e);this._undoMove();if(s){i=X(this._epSquare);break}}}}return[s,this._turn,r,i,this._halfMoves,this._moveNumber].join(" ")}_pieceKey(t){if(!this._board[t])return 0n;const{color:e,type:s}=this._board[t];const r={w:0,b:1}[e];const i={p:0,n:1,b:2,r:3,q:4,k:5}[s];return _[r][i][t]}_epKey(){return this._epSquare===w?0n:p[this._epSquare&7]}_castlingKey(){const t=this._castling.w>>5|this._castling.b>>3;return g[t]}_computeHash(){let t=0n;for(let e=L.a8;e<=L.h1;e++)e&136?e+=7:this._board[e]&&(t^=this._pieceKey(e));t^=this._epKey();t^=this._castlingKey();this._turn==="b"&&(t^=d);return t}_updateSetup(t){if(!(this._history.length>0))if(t!==A){this._header.SetUp="1";this._header.FEN=t}else{this._header.SetUp=null;this._header.FEN=null}}reset(){this.load(A)}get(t){return this._board[L[t]]}findPiece(t){const e=[];for(let s=L.a8;s<=L.h1;s++)s&136?s+=7:this._board[s]&&this._board[s]?.color===t.color&&this._board[s].color===t.color&&this._board[s].type===t.type&&e.push(X(s));return e}put({type:t,color:e},s){if(this._put({type:t,color:e},s)){this._updateCastlingRights();this._updateEnPassantSquare();this._updateSetup(this.fen());return true}return false}_set(t,e){this._hash^=this._pieceKey(t);this._board[t]=e;this._hash^=this._pieceKey(t)}_put({type:t,color:e},s){if(D.indexOf(t.toLowerCase())===-1)return false;if(!(s in L))return false;const r=L[s];if(t==y&&!(this._kings[e]==w||this._kings[e]==r))return false;const i=this._board[r];i&&i.type===y&&(this._kings[i.color]=w);this._set(r,{type:t,color:e});t===y&&(this._kings[e]=r);return true}_clear(t){this._hash^=this._pieceKey(t);delete this._board[t]}remove(t){const e=this.get(t);this._clear(L[t]);e&&e.type===y&&(this._kings[e.color]=w);this._updateCastlingRights();this._updateEnPassantSquare();this._updateSetup(this.fen());return e}_updateCastlingRights(){this._hash^=this._castlingKey();const t=this._board[L.e1]?.type===y&&this._board[L.e1]?.color===v;const e=this._board[L.e8]?.type===y&&this._board[L.e8]?.color===m;t&&this._board[L.a1]?.type===k&&this._board[L.a1]?.color===v||(this._castling.w&=-65);t&&this._board[L.h1]?.type===k&&this._board[L.h1]?.color===v||(this._castling.w&=-33);e&&this._board[L.a8]?.type===k&&this._board[L.a8]?.color===m||(this._castling.b&=-65);e&&this._board[L.h8]?.type===k&&this._board[L.h8]?.color===m||(this._castling.b&=-33);this._hash^=this._castlingKey()}_updateEnPassantSquare(){if(this._epSquare===w)return;const t=this._epSquare+(this._turn===v?-16:16);const e=this._epSquare+(this._turn===v?16:-16);const s=[e+1,e-1];if(this._board[t]!==null||this._board[this._epSquare]!==null||this._board[e]?.color!==Y(this._turn)||this._board[e]?.type!==b){this._hash^=this._epKey();this._epSquare=w;return}const r=t=>!(t&136)&&this._board[t]?.color===this._turn&&this._board[t]?.type===b;if(!s.some(r)){this._hash^=this._epKey();this._epSquare=w}}_attacked(t,e,s){const r=[];for(let i=L.a8;i<=L.h1;i++){if(i&136){i+=7;continue}if(this._board[i]===void 0||this._board[i].color!==t)continue;const n=this._board[i];const o=i-e;if(o===0)continue;const a=o+119;if(K[a]&F[n.type]){if(n.type===b){if(o>0&&n.color===v||o<=0&&n.color===m){if(!s)return true;r.push(X(i))}continue}if(n.type==="n"||n.type==="k"){if(s){r.push(X(i));continue}return true}const t=R[a];let h=i+t;let l=false;while(h!==e){if(this._board[h]!=null){l=true;break}h+=t}if(!l){if(s){r.push(X(i));continue}return true}}}return!!s&&r}attackers(t,e){return e?this._attacked(e,L[t],true):this._attacked(this._turn,L[t],true)}_isKingAttacked(t){const e=this._kings[t];return e!==-1&&this._attacked(Y(t),e)}hash(){return this._hash.toString(16)}isAttacked(t,e){return this._attacked(e,L[t])}isCheck(){return this._isKingAttacked(this._turn)}inCheck(){return this.isCheck()}isCheckmate(){return this.isCheck()&&this._moves().length===0}isStalemate(){return!this.isCheck()&&this._moves().length===0}isInsufficientMaterial(){const t={b:0,n:0,r:0,q:0,k:0,p:0};const e=[];let s=0;let r=0;for(let i=L.a8;i<=L.h1;i++){r=(r+1)%2;if(i&136){i+=7;continue}const n=this._board[i];if(n){t[n.type]=n.type in t?t[n.type]+1:1;n.type===C&&e.push(r);s++}}if(s===2)return true;if(s===3&&(t[C]===1||t[E]===1))return true;if(s===t[C]+2){let t=0;const s=e.length;for(let r=0;r<s;r++)t+=e[r];if(t===0||t===s)return true}return false}isThreefoldRepetition(){return this._getPositionCount(this._hash)>=3}isDrawByFiftyMoves(){return this._halfMoves>=100}isDraw(){return this.isDrawByFiftyMoves()||this.isStalemate()||this.isInsufficientMaterial()||this.isThreefoldRepetition()}isGameOver(){return this.isCheckmate()||this.isDraw()}moves({verbose:t=false,square:e,piece:s}={}){const r=this._moves({square:e,piece:s});return t?r.map((t=>new Move(this,t))):r.map((t=>this._moveToSan(t,r)))}_moves({legal:t=true,piece:e,square:s}={}){const r=s?s.toLowerCase():void 0;const i=e?.toLowerCase();const n=[];const o=this._turn;const a=Y(o);let h=L.a8;let l=L.h1;let c=false;if(r){if(!(r in L))return[];h=l=L[r];c=true}for(let t=h;t<=l;t++){if(t&136){t+=7;continue}if(!this._board[t]||this._board[t].color===a)continue;const{type:e}=this._board[t];let s;if(e===b){if(i&&i!==e)continue;s=t+q[o][0];if(!this._board[s]){st(n,o,t,s,b);s=t+q[o][1];W[o]!==z(t)||this._board[s]||st(n,o,t,s,b,void 0,T.BIG_PAWN)}for(let e=2;e<4;e++){s=t+q[o][e];s&136||(this._board[s]?.color===a?st(n,o,t,s,b,this._board[s].type,T.CAPTURE):s===this._epSquare&&st(n,o,t,s,b,b,T.EP_CAPTURE))}}else{if(i&&i!==e)continue;for(let r=0,i=x[e].length;r<i;r++){const i=x[e][r];s=t;while(true){s+=i;if(s&136)break;if(this._board[s]){if(this._board[s].color===o)break;st(n,o,t,s,e,this._board[s].type,T.CAPTURE);break}st(n,o,t,s,e);if(e===E||e===y)break}}}}if((i===void 0||i===y)&&(!c||l===this._kings[o])){if(this._castling[o]&T.KSIDE_CASTLE){const t=this._kings[o];const e=t+2;this._board[t+1]||this._board[e]||this._attacked(a,this._kings[o])||this._attacked(a,t+1)||this._attacked(a,e)||st(n,o,this._kings[o],e,y,void 0,T.KSIDE_CASTLE)}if(this._castling[o]&T.QSIDE_CASTLE){const t=this._kings[o];const e=t-2;this._board[t-1]||this._board[t-2]||this._board[t-3]||this._attacked(a,this._kings[o])||this._attacked(a,t-1)||this._attacked(a,e)||st(n,o,this._kings[o],e,y,void 0,T.QSIDE_CASTLE)}}if(!t||this._kings[o]===-1)return n;const u=[];for(let t=0,e=n.length;t<e;t++){this._makeMove(n[t]);this._isKingAttacked(o)||u.push(n[t]);this._undoMove()}return u}move(t,{strict:e=false}={}){let s=null;if(typeof t==="string")s=this._moveFromSan(t,e);else if(t===null)s=this._moveFromSan(G,e);else if(typeof t==="object"){const e=this._moves();for(let r=0,i=e.length;r<i;r++)if(t.from===X(e[r].from)&&t.to===X(e[r].to)&&(!("promotion"in e[r])||t.promotion===e[r].promotion)){s=e[r];break}}if(!s)throw typeof t==="string"?new Error(`Invalid move: ${t}`):new Error(`Invalid move: ${JSON.stringify(t)}`);if(this.isCheck()&&s.flags&T.NULL_MOVE)throw new Error("Null move not allowed when in check");const r=new Move(this,s);this._makeMove(s);this._incPositionCount();return r}_push(t){this._history.push({move:t,kings:{b:this._kings.b,w:this._kings.w},turn:this._turn,castling:{b:this._castling.b,w:this._castling.w},epSquare:this._epSquare,halfMoves:this._halfMoves,moveNumber:this._moveNumber})}_movePiece(t,e){this._hash^=this._pieceKey(t);this._board[e]=this._board[t];delete this._board[t];this._hash^=this._pieceKey(e)}_makeMove(t){const e=this._turn;const s=Y(e);this._push(t);if(t.flags&T.NULL_MOVE){e===m&&this._moveNumber++;this._halfMoves++;this._turn=s;this._epSquare=w}else{this._hash^=this._epKey();this._hash^=this._castlingKey();t.captured&&(this._hash^=this._pieceKey(t.to));this._movePiece(t.from,t.to);t.flags&T.EP_CAPTURE&&(this._turn===m?this._clear(t.to-16):this._clear(t.to+16));if(t.promotion){this._clear(t.to);this._set(t.to,{type:t.promotion,color:e})}if(this._board[t.to].type===y){this._kings[e]=t.to;if(t.flags&T.KSIDE_CASTLE){const e=t.to-1;const s=t.to+1;this._movePiece(s,e)}else if(t.flags&T.QSIDE_CASTLE){const e=t.to+1;const s=t.to-2;this._movePiece(s,e)}this._castling[e]=0}if(this._castling[e])for(let s=0,r=V[e].length;s<r;s++)if(t.from===V[e][s].square&&this._castling[e]&V[e][s].flag){this._castling[e]^=V[e][s].flag;break}if(this._castling[s])for(let e=0,r=V[s].length;e<r;e++)if(t.to===V[s][e].square&&this._castling[s]&V[s][e].flag){this._castling[s]^=V[s][e].flag;break}this._hash^=this._castlingKey();if(t.flags&T.BIG_PAWN){let r;r=e===m?t.to-16:t.to+16;if((t.to-1&136||this._board[t.to-1]?.type!==b||this._board[t.to-1]?.color!==s)&&(t.to+1&136||this._board[t.to+1]?.type!==b||this._board[t.to+1]?.color!==s))this._epSquare=w;else{this._epSquare=r;this._hash^=this._epKey()}}else this._epSquare=w;t.piece===b||t.flags&(T.CAPTURE|T.EP_CAPTURE)?this._halfMoves=0:this._halfMoves++;e===m&&this._moveNumber++;this._turn=s;this._hash^=d}}undo(){const t=this._hash;const e=this._undoMove();if(e){const s=new Move(this,e);this._decPositionCount(t);return s}return null}_undoMove(){const t=this._history.pop();if(t===void 0)return null;this._hash^=this._epKey();this._hash^=this._castlingKey();const e=t.move;this._kings=t.kings;this._turn=t.turn;this._castling=t.castling;this._epSquare=t.epSquare;this._halfMoves=t.halfMoves;this._moveNumber=t.moveNumber;this._hash^=this._epKey();this._hash^=this._castlingKey();this._hash^=d;const s=this._turn;const r=Y(s);if(e.flags&T.NULL_MOVE)return e;this._movePiece(e.to,e.from);if(e.piece){this._clear(e.from);this._set(e.from,{type:e.piece,color:s})}if(e.captured)if(e.flags&T.EP_CAPTURE){let t;t=s===m?e.to-16:e.to+16;this._set(t,{type:b,color:r})}else this._set(e.to,{type:e.captured,color:r});if(e.flags&(T.KSIDE_CASTLE|T.QSIDE_CASTLE)){let t,s;if(e.flags&T.KSIDE_CASTLE){t=e.to+1;s=e.to-1}else{t=e.to-2;s=e.to+1}this._movePiece(s,t)}return e}pgn({newline:t="\n",maxWidth:e=0}={}){const s=[];let r=false;for(const e in this._header){const i=this._header[e];i&&s.push(`[${e} "${this._header[e]}"]`+t);r=true}r&&this._history.length&&s.push(t);const i=t=>{const e=this._comments[this.fen()];if(typeof e!=="undefined"){const s=t.length>0?" ":"";t=`${t}${s}{${e}}`}return t};const n=[];while(this._history.length>0)n.push(this._undoMove());const o=[];let a="";n.length===0&&o.push(i(""));while(n.length>0){a=i(a);const t=n.pop();if(!t)break;if(this._history.length||t.color!=="b"){if(t.color==="w"){a.length&&o.push(a);a=this._moveNumber+"."}}else{const t=`${this._moveNumber}. ...`;a=a?`${a} ${t}`:t}a=a+" "+this._moveToSan(t,this._moves({legal:true}));this._makeMove(t)}a.length&&o.push(i(a));o.push(this._header.Result||"*");if(e===0)return s.join("")+o.join(" ");const h=function(){if(s.length>0&&s[s.length-1]===" "){s.pop();return true}return false};const l=function(r,i){for(const n of i.split(" "))if(n){if(r+n.length>e){while(h())r--;s.push(t);r=0}s.push(n);r+=n.length;s.push(" ");r++}h()&&r--;return r};let c=0;for(let r=0;r<o.length;r++)if(c+o[r].length>e&&o[r].includes("{"))c=l(c,o[r]);else{if(c+o[r].length>e&&r!==0){s[s.length-1]===" "&&s.pop();s.push(t);c=0}else if(r!==0){s.push(" ");c++}s.push(o[r]);c+=o[r].length}return s.join("")}
/**
     * @deprecated Use `setHeader` and `getHeaders` instead. This method will return null header tags (which is not what you want)
     */header(...t){for(let e=0;e<t.length;e+=2)typeof t[e]==="string"&&typeof t[e+1]==="string"&&(this._header[t[e]]=t[e+1]);return this._header}setHeader(t,e){this._header[t]=e??I[t]??null;return this.getHeaders()}removeHeader(t){if(t in this._header){this._header[t]=I[t]||null;return true}return false}getHeaders(){const t={};for(const[e,s]of Object.entries(this._header))s!==null&&(t[e]=s);return t}loadPgn(t,{strict:e=false,newlineChar:s="\r?\n"}={}){s!=="\r?\n"&&(t=t.replace(new RegExp(s,"g"),"\n"));const r=a(t);this.reset();const i=r.headers;let n="";for(const t in i){t.toLowerCase()==="fen"&&(n=i[t]);this.header(t,i[t])}if(e){if(i.SetUp==="1"){if(!("FEN"in i))throw new Error("Invalid PGN: FEN tag must be supplied with SetUp tag");this.load(i.FEN,{preserveHeaders:true})}}else n&&this.load(n,{preserveHeaders:true});let o=r.root;while(o){if(o.move){const t=this._moveFromSan(o.move,e);if(t==null)throw new Error(`Invalid move in PGN: ${o.move}`);this._makeMove(t);this._incPositionCount()}o.comment!==void 0&&(this._comments[this.fen()]=o.comment);o=o.variations[0]}const h=r.result;h&&Object.keys(this._header).length&&this._header.Result!==h&&this.setHeader("Result",h)}
/*
     * Convert a move from 0x88 coordinates to Standard Algebraic Notation
     * (SAN)
     *
     * @param {boolean} strict Use the strict SAN parser. It will throw errors
     * on overly disambiguated moves (see below):
     *
     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4
     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned
     * 4. ... Ne7 is technically the valid SAN
     */_moveToSan(t,e){let s="";if(t.flags&T.KSIDE_CASTLE)s="O-O";else if(t.flags&T.QSIDE_CASTLE)s="O-O-O";else{if(t.flags&T.NULL_MOVE)return G;if(t.piece!==b){const r=et(t,e);s+=t.piece.toUpperCase()+r}if(t.flags&(T.CAPTURE|T.EP_CAPTURE)){t.piece===b&&(s+=X(t.from)[0]);s+="x"}s+=X(t.to);t.promotion&&(s+="="+t.promotion.toUpperCase())}this._makeMove(t);this.isCheck()&&(this.isCheckmate()?s+="#":s+="+");this._undoMove();return s}_moveFromSan(t,e=false){let s=it(t);e||(s==="0-0"?s="O-O":s==="0-0-0"&&(s="O-O-O"));if(s==G){const t={color:this._turn,from:0,to:0,piece:"k",flags:T.NULL_MOVE};return t}let r=rt(s);let i=this._moves({legal:true,piece:r});for(let t=0,e=i.length;t<e;t++)if(s===it(this._moveToSan(i[t],i)))return i[t];if(e)return null;let n;let o;let a;let h;let l;let c=false;o=s.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);if(o){n=o[1];a=o[2];h=o[3];l=o[4];a.length==1&&(c=true)}else{o=s.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);if(o){n=o[1];a=o[2];h=o[3];l=o[4];a.length==1&&(c=true)}}r=rt(s);i=this._moves({legal:true,piece:n||r});if(!h)return null;for(let t=0,e=i.length;t<e;t++)if(a){if(!(n&&n.toLowerCase()!=i[t].piece||L[a]!=i[t].from||L[h]!=i[t].to||l&&l.toLowerCase()!=i[t].promotion))return i[t];if(c){const e=X(i[t].from);if((!n||n.toLowerCase()==i[t].piece)&&L[h]==i[t].to&&(a==e[0]||a==e[1])&&(!l||l.toLowerCase()==i[t].promotion))return i[t]}}else if(s===it(this._moveToSan(i[t],i)).replace("x",""))return i[t];return null}ascii(){let t="   +------------------------+\n";for(let e=L.a8;e<=L.h1;e++){Z(e)===0&&(t+=" "+"87654321"[z(e)]+" |");if(this._board[e]){const s=this._board[e].type;const r=this._board[e].color;const i=r===v?s.toUpperCase():s.toLowerCase();t+=" "+i+" "}else t+=" . ";if(e+1&136){t+="|\n";e+=8}}t+="   +------------------------+\n";t+="     a  b  c  d  e  f  g  h";return t}perft(t){const e=this._moves({legal:false});let s=0;const r=this._turn;for(let i=0,n=e.length;i<n;i++){this._makeMove(e[i]);this._isKingAttacked(r)||(t-1>0?s+=this.perft(t-1):s++);this._undoMove()}return s}setTurn(t){if(this._turn==t)return false;this.move("--");return true}turn(){return this._turn}board(){const t=[];let e=[];for(let s=L.a8;s<=L.h1;s++){this._board[s]==null?e.push(null):e.push({square:X(s),type:this._board[s].type,color:this._board[s].color});if(s+1&136){t.push(e);e=[];s+=8}}return t}squareColor(t){if(t in L){const e=L[t];return(z(e)+Z(e))%2===0?"light":"dark"}return null}history({verbose:t=false}={}){const e=[];const s=[];while(this._history.length>0)e.push(this._undoMove());while(true){const r=e.pop();if(!r)break;t?s.push(new Move(this,r)):s.push(this._moveToSan(r,this._moves()));this._makeMove(r)}return s}_getPositionCount(t){return this._positionCount.get(t)??0}_incPositionCount(){this._positionCount.set(this._hash,(this._positionCount.get(this._hash)??0)+1)}_decPositionCount(t){const e=this._positionCount.get(t)??0;e===1?this._positionCount.delete(t):this._positionCount.set(t,e-1)}_pruneComments(){const t=[];const e={};const s=t=>{t in this._comments&&(e[t]=this._comments[t])};while(this._history.length>0)t.push(this._undoMove());s(this.fen());while(true){const e=t.pop();if(!e)break;this._makeMove(e);s(this.fen())}this._comments=e}getComment(){return this._comments[this.fen()]}setComment(t){this._comments[this.fen()]=t.replace("{","[").replace("}","]")}
/**
     * @deprecated Renamed to `removeComment` for consistency
     */deleteComment(){return this.removeComment()}removeComment(){const t=this._comments[this.fen()];delete this._comments[this.fen()];return t}getComments(){this._pruneComments();return Object.keys(this._comments).map((t=>({fen:t,comment:this._comments[t]})))}
/**
     * @deprecated Renamed to `removeComments` for consistency
     */deleteComments(){return this.removeComments()}removeComments(){this._pruneComments();return Object.keys(this._comments).map((t=>{const e=this._comments[t];delete this._comments[t];return{fen:t,comment:e}}))}setCastlingRights(t,e){for(const s of[y,S])e[s]!==void 0&&(e[s]?this._castling[t]|=H[s]:this._castling[t]&=~H[s]);this._updateCastlingRights();const s=this.getCastlingRights(t);return(e[y]===void 0||e[y]===s[y])&&(e[S]===void 0||e[S]===s[S])}getCastlingRights(t){return{[y]:(this._castling[t]&H[y])!==0,[S]:(this._castling[t]&H[S])!==0}}moveNumber(){return this._moveNumber}}export{C as BISHOP,m as BLACK,Chess,A as DEFAULT_POSITION,y as KING,E as KNIGHT,Move,b as PAWN,S as QUEEN,k as ROOK,I as SEVEN_TAG_ROSTER,N as SQUARES,v as WHITE,tt as validateFen,u as xoroshiro128};

